---
- name: create system group
  group:
    name: "{{ promtail_system_group }}"
    system: true
    state: present
  when: promtail_system_group != "root"
  become: true
  tags: promtail

- name: create system user
  user:
    name: "{{ promtail_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ promtail_system_group }}"
    groups: "{{ promtail_user_additional_groups }}"
    createhome: false
    home: /
  when: promtail_system_user != "root"
  become: true
  tags: promtail

- name: check if is installed
  stat:
    path: "/usr/local/bin/promtail"
  register: __promtail_is_installed
  become: true
  tags: promtail

- name: gather currently installed version (if any)
  command: "/usr/local/bin/promtail -version"
  args:
    warn: false
  changed_when: false
  register: __promtail_current_version_output
  when: __promtail_is_installed.stat.exists
  become: true
  tags: promtail

- block:
  - name: get latest release
    uri:
      url: "https://api.github.com/repos/grafana/loki/releases/latest"
      method: GET
      return_content: true
      status_code: 200
      body_format: json
      validate_certs: false
      user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
      password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
    environment: "{{ proxy_env }}"
    no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
    register: _latest_release
    until: _latest_release.status == 200
    retries: 5

  - name: "set promtail version to {{ _latest_release.json.tag_name[1:] }}"
    set_fact:
      promtail_version: "{{ _latest_release.json.tag_name[1:] }}"
  when: promtail_version == "latest"
  delegate_to: localhost
  run_once: true
  become: true
  tags: promtail

- block:
  - name: get checksum list from github
    set_fact:
      _checksums: "{{ lookup('url', 'https://github.com/grafana/loki/releases/download/v' + promtail_version + '/SHA256SUMS', wantlist=True) | list }}"
    environment: "{{ proxy_env }}"
    run_once: true
    become: true
    tags: promtail

  - name: "get checksum for {{ go_arch }} architecture"
    set_fact:
      promtail_checksum: "{{ item.split(' ')[0] }}"
    with_items: "{{ _checksums }}"
    when: "('promtail-linux-' + go_arch + '.zip') in item"
    become: true
    tags: promtail

  - name: download binary to local folder
    get_url:
      url: "https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-{{ go_arch }}.zip"
      dest: "/tmp/promtail-{{ promtail_version }}.linux-{{ go_arch }}.zip"
      checksum: "sha256:{{ promtail_checksum }}"
    environment: "{{ proxy_env }}"
    register: _download_binary
    until: _download_binary is succeeded
    retries: 5
    delay: 2
    delegate_to: localhost
    check_mode: false
    become: true
    tags: promtail

  - name: unpack binary
    unarchive:
      src: "/tmp/promtail-{{ promtail_version }}.linux-{{ go_arch }}.zip"
      dest: "/tmp"
      creates: "/tmp/promtail-{{ promtail_version }}.linux-{{ go_arch }}/promtail"
    delegate_to: localhost
    check_mode: false
    become: true
    tags: promtail

  - name: propagate binaries
    copy:
      src: "/tmp/promtail-linux-{{ go_arch }}"
      dest: "{{ promtail_binary_install_dir }}/promtail"
      mode: 0755
      owner: root
      group: root
    notify: restart promtail
    when: not ansible_check_mode
    become: true
    tags: promtail
  when: (not __promtail_is_installed.stat.exists) or (__promtail_current_version_output.stdout.split(" ")[2] != promtail_version)

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ promtail_system_user }}"
    group: "{{ promtail_system_group }}"
    mode: u+rwX,g+rwX,o=rX
  with_items:
    - "{{ promtail_config_dir }}"
    - "{{ promtail_config_file_sd_dir }}"
    - "{{ promtail_data_dir }}"
  become: true
  tags: promtail

- name: copy config file
  template:
    src: promtail.config.yml.j2
    dest: "{{ promtail_config_dir }}/{{ promtail_config_file }}"
    owner: "{{ promtail_system_user }}"
    group: "{{ promtail_system_group }}"
    mode: 0644
  notify: restart promtail
  become: true
  tags:
    - promtail
    - promtail_config

- name: create systemd service unit
  template:
    src: promtail.service.j2
    dest: /etc/systemd/system/promtail.service
    owner: root
    group: root
    mode: 0644
  notify: restart promtail
  become: true
  tags: promtail

- name: start and enable promtail
  systemd:
    daemon_reload: true
    name: promtail
    enabled: true
    state: started
  become: true
  tags: promtail
